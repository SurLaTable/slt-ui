import gulp from "gulp";
import debug from "gulp-debug";
import named from "vinyl-named";
import path from "path";
import gwebpack from "webpack-stream";
import webpack from "webpack";
import uglify from "gulp-uglify-es";
import lazypipe from "lazypipe";
import gulpif from "gulp-if";
import filter from "gulp-filter";

import { componentPaths as paths } from "./config/paths.config";

function getUglifyOptions() {
	return {
		output: {
			preamble: `/**
* !!! IMPORTANT !!!

* DO NOT EDIT THIS FILE DIRECTLY.
* Go to: ${path.join(__dirname, paths.src)}

* To edit the correct files.
**/;

`,
			beautify: false
		}
	};
}

function buildComponents() {
	var js = filter(["!node_modules/**/", "**/*.js"], {
		restore: true
	});
	var releasejs = lazypipe().pipe(
		uglify,
		getUglifyOptions()
	);
	var options = require("./config/build.webpack.config")();
	return (
		gulp
			.src(path.join(paths.src, "../manifest/index.js"))
			// Attach file names to the gulp file records:
			.pipe(named())
			.pipe(gwebpack(options, webpack))
			.pipe(js)
			.pipe(gulpif(process.env.NODE_ENV === "production", releasejs()))
			.pipe(js.restore)
			.pipe(debug({ title: `[components]` }))
			.pipe(gulp.dest(paths.dest.js))
	);
}

buildComponents.displayName = "components";
buildComponents.description = "components";

export default buildComponents;
